{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Vweet.js","components/VweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","FacebookAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","faFacebook","Vweet","vweetId","vweetObj","isOwner","editing","setEditing","text","newVweet","setNewVweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toogleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","VweetFactory","userObj","vweet","setVweet","attachment","setAttachment","attachmentFile","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","vweets","setVweets","useEffect","onSnapshot","snapshot","vwettArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyVweet","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3f49e50.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\"; //로그인 시스템을 위해서 임포트\nimport \"firebase/firestore\"; //데이터베이스를 사용하기 위해 임포트\nimport \"firebase/storage\"; // 파일 저장을 위한 임포트\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth(); // 로그인 시스템을 위해서 \nexport const dbService = firebase.firestore(); // 데이타베이스를 사용하게 해준다.\nexport const storageService = firebase.storage(); // 파일 저장을 위한 스토리지","import React, { useState } from \"react\";\nimport { authService } from \"fBase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount,setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target:{name, value}} = event;\n\n        if(name === \"email\"){\n            setEmail(value);\n        }else if(name === \"password\"){\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async(event) =>{\n        event.preventDefault();\n        let data;\n        try{\n            if(newAccount){\n                data=await authService.createUserWithEmailAndPassword(email,password);\n            }else{\n                data=await authService.signInWithEmailAndPassword(email,password);\n            }\n        }\n        catch(error){\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}  className=\"container\">\n                <input className=\"authInput\" name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n                <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span className=\"authSwitch\" onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { authService, firebaseInstance } from \"fBase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n  faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Auth = () => {\n    \n    \n    \n    \n    const onSocialClick = async (event) => {\n        const {target:{name},} = event;\n        let provider;\n        if(name === \"google\"){\n            provider= new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        else if(name === \"github\"){\n            provider= new firebaseInstance.auth.GithubAuthProvider();\n        }\n        else if(name === \"facebook\"){\n            provider= new firebaseInstance.auth.FacebookAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n\n        \n    }\n    return(\n    <div className=\"authContainer\">\n        <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n        <AuthForm />\n        <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n        <button onClick={onSocialClick} name=\"facebook\" className=\"authBtn\">\n          Continue with FaceBook <FontAwesomeIcon icon={faFacebook} />\n        </button>\n        </div>\n    </div>\n        );\n    };\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Vweet = ({ vweetId, vweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newVweet, setNewVweet] = useState(vweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"트윗을 삭제 하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`vweets/${vweetObj.id}`).delete();\n      await storageService.refFromURL(vweetObj.attachmentUrl).delete();\n      //deleate\n    }\n  };\n  const toogleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`vweets/${vweetObj.id}`).update({\n      text: newVweet,\n    }); //업데이트\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewVweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"입력\"\n              value={newVweet}\n              required\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Vweet\" className=\"formBtn\" />\n          </form>\n          <button onClick={toogleEditing} className=\"formBtn cancelBtn\">\n            취소\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{vweetObj.text}</h4>\n          {vweetObj.attachmentUrl && <img src={vweetObj.attachmentUrl} />}\n          {isOwner && (\n            <>\n              <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toogleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Vweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst VweetFactory = ({userObj}) => {\n    const [vweet, setVweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) =>{\n        if (vweet === \"\") {\n            return;\n        }\n\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){ \n            \n            const attachmentFile = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentFile.putString(attachment,\"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        \n        const vweetObj = {\n            text: vweet,\n            createdAt: Date.now(), // 생성시간\n            creatorId: userObj.uid, //생성자 아이디 앱js 에서 라우터를 통해 받아옴\n            attachmentUrl,\n        }\n       \n        await dbService.collection(\"vweets\").add(vweetObj);\n        setVweet(\"\");\n        setAttachment(\"\");\n         \n   \n    };\n    const onChange = (event) =>{\n        const { target:{value} } = event;\n        setVweet(value);\n    };\n    const onFileChange = (event) => {\n        const {target:{files}} =event; //파일 주소를 받아옴\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {   //로드되었을때 피니쉬 이벤트의 결과를 넣어줌\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            \n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile); //이미지 주소를 읽어옴\n         \n    }\n    const onClearAttachment = () => { \n        setAttachment(null);\n\n    }\n\n\n    return( \n        <form onSubmit={onSubmit} className=\"factoryForm\">\n        <div className=\"factoryInput__container\">\n          <input\n            className=\"factoryInput__input\"\n            value={vweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input  id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n          />\n          {attachment && (\n              <div className=\"factoryForm__attachment\">\n              <img\n                src={attachment}\n                style={{\n                  backgroundImage: attachment,\n                }}\n              />\n              <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                <span>Remove</span>\n                <FontAwesomeIcon icon={faTimes} />\n              </div>\n            </div>\n          )}\n        </form>\n    \n        \n    );\n    \n};\n\n\nexport default VweetFactory;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fBase\";\nimport Vweet from \"components/Vweet\";\nimport VweetFactory from \"components/VweetFactory\";\n\nconst Home = ({userObj}) => {\n    \n    const [vweets,setVweets] = useState([]);\n    \n   /*  \n    const getVweets = async () => { \n        const dbVweets = await dbService.collection(\"vweets\").get();\n        dbVweets.forEach(document=>{\n            const vweetObject = {\n                ...document.data(),\n                id: document.id,\n                \n            };\n            setVweets((prev) => [document.data(),...prev]);\n        }); //데이터를 불러옴\n        \n    }; */ //오래된 방식\n\n    // 위의 방식보다 re 렌더를 적게함 \n    useEffect(() => {\n        //getVweets();\n        dbService.collection(\"vweets\").onSnapshot((snapshot)=>{\n            const vwettArray =snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setVweets(vwettArray);\n        });\n    },[]);  \n    \n    return (\n            <div className=\"container\">\n                <VweetFactory userObj={userObj} />\n                <div style={{ marginTop: 30 }}>\n                    {vweets.map((vweet) => ( \n                        <Vweet key={vweet.id} vweetObj={vweet} isOwner={vweet.creatorId === userObj.uid} />\n                    ))}\n                </div>\n            </div>      \n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fBase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyVweet = async () => {\n    const vweets = await dbService\n      .collection(\"vweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createAt\")\n      .get();\n  };\n  //필터링\n  useEffect(() => {\n    getMyVweet();\n  });\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\n      <Switch>\n        {isLoggedIn ? (\n          <div  style={{\n            maxWidth: 890,\n            width: \"100%\",\n            margin: \"0 auto\",\n            marginTop: 80,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}/>\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport {authService} from \"../fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) =>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  },[])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n  <> \n    {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}></AppRouter> : \"초기화 중....\"}\n    <footer>&copy; {new Date().getFullYear()} Vwitter </footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}